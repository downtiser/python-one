2018/7/13
python notes 2:
1.
The decode and encode between String and bytes:
meg='一二三四五'
print(meg.encode('utf-8'))  #.encode('the type of the string you want to encode,such as utf-8 or GBK...')
print(meg.encode('utf-8').decode('ustf-8'))  
>>>b'\xe4\xb8\x80\xe4\xba\x8c\xe4\xb8\x89\xe5\x9b\x9b\xe4\xba\x9
>>>一二三四五

2.
List and Tuple:

list:
select and add:
names=['a','b','c','d']
names[1]
>>>b
names[1:3]  #切片
>>>['b','c']   # won't output the last element,such as names[3]
names[-1]
>>>d
names[-1:-3]
>>>[]  # find from left to right
names[-3:-1]
>>>['b','c']
names[-3:]
>>>['b','c','d']

names.append('e')  # add to the end of the list
>>>['b','c','d','e']

names.insert(1,'f') #add to the place of names[1] 
>>>['b','f','c','d','e']

delete:
method1:
names.remove('e')
>>>['b','f','c','d']

method2:
del names[1]
>>> ['b','c','d']

method3:
names.pop() #default to remove the last one
>>>['b','c']
names.pop(1) 
>>>['b']


search:
names=['b','f','c','d','e','e']
names.index('c')
>>>2
names.count('e') #count the amount of the element
>>>2

names.clear #clear the iist
>>>[]

names=[1,2,3,4]
names.reverse
>>>[4,3,2,1]]

names=['a','1','#','A']
names.sort() #sort the list
>>>['#', '1', 'A', 'a']

extend:
names1=['a','b','c']
names2=[1,2,3]
names1.extend(names2)
>>>['a','b','c',1,2,3]

copy:
names1=['a','b','c']
names2=names1.copy()
names2
>>>['a','b','c']

name1=['a','b',[1,2,3],'c']
name2=name1.copy()
name1[1]='f'
name[2][1]=5
name1 name2
>>>['a','f',[1,5,3],'c']  ['a','b',[1,5,3],'c']  #the element of a children list can be changed even after copy,but a element in a parent list won't be changed after copy 


name1=['a','b',[1,2,3],'c']
name2=name1
name1[1]='f'
name[2][1]=5
name1 name2
>>>['a','f',[1,5,3],'c'] ['a','f',[1,5,3],'c']  #all elements would be changed through being valued 

import copy  
name1=['a','b','c',[1,2,3],'d']
name2=copy.deepcopy(name1)
print(name1,name2)
name1[1]='f'
name1[3][1]=5
print('--deepcopy',name1,name2)
>>>--deepcopy ['a', 'f', 'c', [1, 5, 3], 'd'] ['a', 'b', 'c', [1, 2, 3], 'd']  #all elements would be independent after deep copy


num=[1,2,3,4,5]
num[0:-1:2]
>>>[1,3,5]  #跳切

